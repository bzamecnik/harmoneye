package com.harmoneye.math.fft;

import org.apache.commons.math3.complex.Complex;
import org.apache.commons.math3.transform.DftNormalization;
import org.apache.commons.math3.transform.FastFourierTransformer;
import org.apache.commons.math3.transform.TransformType;
import org.apache.commons.math3.transform.TransformUtils;

import com.harmoneye.util.Formatter;

public class ApacheFft {
	public static void main(String[] args) {
		Complex[] temporalKernel = TransformUtils.createComplexArray(new double[][] {
			{ 0.00117647, 0.000020363, -0.00129092, -0.0000726869, 0.00162955, 0.000159101, -0.00217847, -0.000300026,
				0.00291517, 0.000512546, -0.00380951, -0.000809325, 0.004825, 0.00119775, -0.00592037, -0.00167937,
				0.0070513, 0.00224959, -0.00817232, -0.00289779, 0.0092387, 0.00360768, -0.0102083, -0.00435799,
				0.0110433, 0.00512348, -0.0117118, -0.00587616, 0.0121889, 0.00658663, -0.0124577, -0.00722563,
				0.0125098, 0.00776554, -0.0123456, -0.00818186, 0.0119741, 0.0084546, -0.011412, -0.00856948,
				0.0106831, 0.00851878, -0.00981695, -0.00830208, 0.00884736, 0.00792648, -0.00781089, -0.00740656,
				0.00674507, 0.00676398, -0.0056867, -0.00602666, 0.00467028, 0.00522778, -0.00372647, -0.00440434,
				0.00288084, 0.00359562, -0.00215293, -0.00284153, 0.00155551, 0.00218074, -0.0010943, -0.00164899,
				0.000767969, 0.00127743, -0.000568479, -0.00109112, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0 },
			{ 0., 0.00120516, 0.0000436365, -0.00143287, -0.000110293, 0.00187894, 0.00022159, -0.00252506,
				-0.00039643, 0.00334478, 0.000649809, -0.0043046, -0.000991844, 0.00536542, 0.00142705, -0.00648422,
				-0.00195393, 0.00761588, 0.00256484, -0.00871505, -0.00324625, 0.00973808, 0.00397927, -0.0106448,
				-0.00474054, 0.0114001, 0.00550325, -0.0119755, -0.00623852, 0.01235, 0.00691685, -0.012511,
				-0.00750959, 0.0124544, 0.00799052, -0.0121849, -0.00833722, 0.0117155, 0.00853242, -0.0110667,
				-0.00856503, 0.0102652, 0.00843092, -0.00934284, -0.00813341, 0.00833514, 0.00768337, -0.00727931,
				-0.00709899, 0.00621272, 0.0064052, -0.00517123, -0.00563268, 0.00418757, 0.00481671, -0.00329001,
				-0.00399564, 0.00250121, 0.00320928, -0.00183738, -0.00249715, 0.0013078, 0.00189666, -0.000914629,
				-0.00144146, 0.000653115, 0.00115983, -0.000512125, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0 } });

		Complex[] spectralKernel = new FastFourierTransformer(DftNormalization.STANDARD).transform(temporalKernel,
			TransformType.FORWARD);
		System.out.println(Formatter.formatArray(spectralKernel));

		Complex[] myTemporalKernel = TransformUtils.createComplexArray(new double[][] {
			{ 0.0011764705882352942, 2.0362986649822264E-5, -0.0012909152538326764, -7.26868928360615E-5,
				0.0016295479025190413, 1.5910132459199755E-4, -0.002178466719713198, -3.000258152155503E-4,
				0.002915166984038804, 5.125455078151504E-4, -0.0038095069915817514, -8.093245916234104E-4,
				0.004824998793286783, 0.0011977521345566575, -0.00592036562558813, -0.0016793663816485325,
				0.00705129603657371, 0.0022495897139858416, -0.008172316069590013, -0.0028977909467681234,
				0.009238695857999588, 0.0036076752431718285, -0.010208305833249609, -0.004357985432151114,
				0.01104334049722633, 0.005123482748280356, -0.01171183422023883, -0.005876160732361932,
				0.012188903483324322, 0.006586633944708101, -0.012457662912643755, -0.007225633846507989,
				0.012509777741263406, 0.00776553816318646, -0.012345632257423885, -0.008181857566086295,
				0.01197411156167843, 0.008454604733187227, -0.01141201172430653, -0.008569475736011868,
				0.010683110377949752, 0.008518782031979682, -0.009816945108973121, -0.008302082736370195,
				0.008847360014037842, 0.007926480774223574, -0.007810890867504568, -0.007406562314863718,
				0.006745066042597789, 0.006763975822625758, -0.005686703348386627, -0.006026664312083357,
				0.0046702821644268346, 0.005227781151047379, -0.003726465734668983, -0.0044043352067603255,
				0.002880840458393245, 0.0035956245357131066, -0.002152927890332389, -0.002841528525466344,
				0.0015555114824196805, 0.0021807358834889847, -0.001094304532747797, -0.0016489897599399903,
				7.679691075659081E-4, 0.0012774313842015507, -5.684786747261389E-4, -0.0010911198637142104, 0.0, 0.0,
				0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
				0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
				0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
			{ 0.0, 0.0012051556109876605, 4.36365175214372E-5, -0.0014328664273550154, -1.1029250458027477E-4,
				0.0018789360647937941, 2.2159010318176941E-4, -0.002525062703150488, -3.964298626045124E-4,
				0.0033447808853512805, 6.498089727478402E-4, -0.004304596258408542, -9.918443559223619E-4,
				0.005365417734940922, 0.001427052793987545, -0.006484222642606041, -0.001953927472537774,
				0.007615880110384705, 0.0025648355381730817, -0.008715051077318813, -0.0032462452078824756,
				0.009738080212525561, 0.003979274423130167, -0.010644795839944106, -0.0047405368124679055,
				0.011400138619458286, 0.005503245608824171, -0.011975548019709657, -0.00623852290254769,
				0.012350047129772309, 0.00691685085261472, -0.012510980549379528, -0.0075095937606095555,
				0.012454376298846099, 0.007990515624351257, -0.012184920136194625, -0.008337217155242767,
				0.011715548540137712, 0.00853241931498136, -0.011066684076049256, -0.008565027074326742,
				0.010265153092698829, 0.008430917017786888, -0.009342839945822402, -0.008133405153442609,
				0.008335143552260919, 0.007683366239850188, -0.007279310514177658, -0.007098992406483678,
				0.0062127239374030925, 0.006405196039669918, -0.005171228191298959, -0.005632679013398031,
				0.004187567188649023, 0.00481670654553619, -0.0032900074517765326, -0.003995638476498919,
				0.0025012075964799723, 0.00320928289793885, -0.0018373833861102158, -0.0024971462129509112,
				0.0013078027951877642, 0.0018966594349892458, -9.146292903044203E-4, -0.0014414625395740327,
				6.531145701086443E-4, 0.0011598268554490782, -5.121251223369396E-4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
				0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
				0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
				0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 } });
		
		for (int i = 0; i < temporalKernel.length; i++) {
			System.out.println(temporalKernel[i].subtract(myTemporalKernel[i]).abs());
		}
	}
}
