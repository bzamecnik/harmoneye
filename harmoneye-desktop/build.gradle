apply plugin: 'java'
apply plugin: 'eclipse'

version = appVersion// + "-" + "git describe --always --long".execute().text.trim()

//configurations.all {
//    // check for updates every build
//    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
//}

buildscript {
	repositories {
		mavenCentral()
	}
    dependencies {
        classpath 'net.sf.proguard:proguard-gradle:4.9'
    }
}

repositories {
	mavenLocal()
	mavenCentral()
	flatDir {
		dirs 'lib'
	}
}

configurations {
	macBundleApp
	macRuntime {
		extendsFrom runtime
	} 
}

dependencies {
	compile 'com.harmoneye:harmoneye-commons:1.1-SNAPSHOT'

	//compile 'colt:colt:1.2.0'
	compile 'edu.emory.mathcs:JTransforms:2.4'
	compile 'org.apache.commons:commons-math3:3.2'
	compile 'org.apache.commons:commons-lang3:3.1'

	compile 'org.simplericity.macify:macify:1.6'

	macBundleApp ':appbundler:1.0'
	
	compile ':jogl-all:'
	macRuntime ':jogl-all-natives-macosx-universal:'
	compile ':gluegen-rt:'
	macRuntime ':gluegen-rt-natives-macosx-universal:'

	testCompile 'junit:junit:4.10'
}

jar {
	manifest {
		attributes(
			'Main-Class': 'com.harmoneye.HarmonEye',
			'Implementation-Title': 'HarmonEye',
			'Implementation-Version': version)
	}
}

task macProguardJar(type: proguard.gradle.ProGuardTask, dependsOn: 'jar') {
	injars jar.archivePath
	outjars "${jar.destinationDir}/proguard/${jar.archiveName}"
	libraryjars configurations.compile
	libraryjars "<java.home>/lib/rt.jar"
	keepclasseswithmembers 'public class * { \
	    public static void main(java.lang.String[]); \
	}'
}

ant {
	taskdef(
		name: 'bundleapp',
		classname: 'com.oracle.appbundler.AppBundlerTask',
		classpath: configurations.macBundleApp.asPath
	)
}

task macBundleApp(dependsOn: 'macProguardJar') << {
	def distDirPath = "dist/mac"
	def distDir = new File(distDirPath)
	distDir.mkdirs()
	ant.bundleapp(
		outputdirectory: distDirPath,
		name: "HarmonEye",
		displayname: "HarmonEye",
		identifier: "com.harmoneye.HarmonEye",
		mainclassname: "com.harmoneye.app.HarmonEye",
		shortversion: version,
		applicationCategory: "public.app-category.music",
		icon: "src/main/resources/HarmonEye.icns"
	) {
		classpath(file: "${jar.destinationDir}/proguard/${jar.archiveName}")
		configurations.compile.each {
			classpath(file: it)
		}
		configurations.macRuntime.each {
			classpath(file: it)
		}
	}
	// TODO: enable retina
	// defaults write "`pwd`/Info.plist" NSHighResolutionCapable -bool true
}
